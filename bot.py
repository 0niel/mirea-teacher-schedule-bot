import telebot
import requests
from telebot import types
import config
bot = telebot.TeleBot(config.token)

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è')

@bot.message_handler(content_types=['text'])


def get_name(message):
    global teacher
    teacher = message.text
    if len(teacher) < 4:
        bot.reply_to(message, '–§–∞–º–∏–ª–∏—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞—è')
        return
    url = f"https://schedule.mirea.ninja/api/schedule/teacher/{teacher}"
    response = requests.get(url)
    teacher_schedule = response.json() if response.status_code == 200 else None


    if teacher_schedule is None:
        bot.reply_to(message, '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
        return bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è')

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    item1 = types.KeyboardButton("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
    item2 = types.KeyboardButton("–í—Ç–æ—Ä–Ω–∏–∫")
    item3 = types.KeyboardButton("–°—Ä–µ–¥–∞")
    item4 = types.KeyboardButton("–ß–µ—Ç–≤–µ—Ä–≥")
    item5 = types.KeyboardButton("–ü—è—Ç–Ω–∏—Ü–∞")
    item6 = types.KeyboardButton("–°—É–±–±–æ—Ç–∞")
    item7 = types.KeyboardButton("–ù–∞–∑–∞–¥")
    markup.add(item1, item2, item3, item4, item5, item6 ,item7)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏', reply_markup=markup)



    bot.register_next_step_handler(message, get_day)

def get_day(message):
    global day
    day = message.text

    if day == '–ø–Ω' or day == '–ü–Ω' or day == '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' or day == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' or day == '1':
        day = '1'
    elif day == '–≤—Ç' or day == '–í—Ç' or day == '–≤—Ç–æ—Ä–Ω–∏–∫' or day == '–í—Ç–æ—Ä–Ω–∏–∫' or day == '2':
        day = '2'
    elif day == '—Å—Ä' or day == '–°—Ä' or day == '—Å—Ä–µ–¥–∞' or day == '–°—Ä–µ–¥–∞' or day == '3':
        day = '3'
    elif day == '—á—Ç' or day == '–ß—Ç' or day == '—á–µ—Ç–≤–µ—Ä–≥' or day == '–ß–µ—Ç–≤–µ—Ä–≥' or day == '4':
        day = '4'
    elif day == '–ø—Ç' or day == '–ü—Ç' or day == '–ø—è—Ç–Ω–∏—Ü–∞' or day == '–ü—è—Ç–Ω–∏—Ü–∞' or day == '5':
        day = '5'
    elif day == '—Å–±' or day == '–°–±' or day == '—Å—É–±–±–æ—Ç–∞' or day == '–°—É–±–±–æ—Ç–∞' or day == '6':
        day = '6'
    elif day == '–Ω–∞–∑–∞–¥' or day == '–ù–∞–∑–∞–¥':
        return bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è',reply_markup = types.ReplyKeyboardRemove())
    else:
        bot.reply_to(message, '–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥',reply_markup = types.ReplyKeyboardRemove())
        return bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è')
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
    item1 = types.KeyboardButton("1")
    item2 = types.KeyboardButton("2")
    item3 = types.KeyboardButton("3")
    item4 = types.KeyboardButton("4")
    item5 = types.KeyboardButton("5")
    item6 = types.KeyboardButton("6")
    item7 = types.KeyboardButton("7")
    item8 = types.KeyboardButton("8")
    item9 = types.KeyboardButton("9")
    item10 = types.KeyboardButton("10")
    item11 = types.KeyboardButton("11")
    item12 = types.KeyboardButton("12")
    item13 = types.KeyboardButton("13")
    item14 = types.KeyboardButton("14")
    item15 = types.KeyboardButton("15")
    item16 = types.KeyboardButton("16")
    item17 = types.KeyboardButton("17")
    item18 = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")


    markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13, item14, item15, item16 ,item17 ,item18)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é', reply_markup=markup)


    bot.register_next_step_handler(message, get_week)



def get_week(message):
    global weeknum
    weeknum = message.text
    if weeknum == '–æ—Ç–º–µ–Ω–∞' or weeknum == '–û—Ç–º–µ–Ω–∞':
        return bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è',reply_markup = types.ReplyKeyboardRemove())
    if weeknum.isdigit() == False:
        bot.reply_to(message, '–ù–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º')
        return bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è')

    url = f"https://schedule.mirea.ninja/api/schedule/teacher/{teacher}"
    response = requests.get(url)


    teacher_schedule = response.json() if response.status_code == 200 else None

    if teacher_schedule:
        text = ""

        weekdays = {
            1: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
            2: "–í—Ç–æ—Ä–Ω–∏–∫",
            3: "–°—Ä–µ–¥–∞",
            4: "–ß–µ—Ç–≤–µ—Ä–≥",
            5: "–ü—è—Ç–Ω–∏—Ü–∞",
            6: "–°—É–±–±–æ—Ç–∞",
        }

        teacher_schedule = teacher_schedule["schedules"]
        teacher_schedule = sorted(teacher_schedule, key=lambda x: x["weekday"])
        teacher_schedule = sorted(teacher_schedule, key=lambda x: x["group"])
        teacher_schedule = list(filter(lambda x: x["weekday"] == int(day), teacher_schedule))
        teacher_schedule = list(filter(lambda x: int(weeknum) in x["lesson"]["weeks"], teacher_schedule))
        teacher_schedule = sorted(teacher_schedule, key=lambda x: x["lesson"]["time_start"])
        teacher_schedule = sorted(teacher_schedule, key=lambda x: x["lesson"]["time_end"])




        remove_index = []
        for i in range(len(teacher_schedule)):
            for j in range(i + 1, len(teacher_schedule)):
                if (
                        teacher_schedule[i]["weekday"] == teacher_schedule[j]["weekday"]
                        and teacher_schedule[i]["lesson"]["name"]
                        == teacher_schedule[j]["lesson"]["name"]
                        and teacher_schedule[i]["lesson"]["weeks"]
                        == teacher_schedule[j]["lesson"]["weeks"]
                        and teacher_schedule[i]["lesson"]["time_start"]
                        == teacher_schedule[j]["lesson"]["time_start"]

                ):
                    teacher_schedule[i]["group"] += ", " + teacher_schedule[j]["group"]
                    remove_index.append(j)

        remove_index = set(remove_index)
        for i in sorted(remove_index, reverse=True):
            del teacher_schedule[i]


        if not teacher_schedule:
            bot.send_message(message.from_user.id, '–í —ç—Ç–æ—Ç –¥–µ–Ω—å —É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–∞—Ä',reply_markup = types.ReplyKeyboardRemove())
            return bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è')

        i = 0
        while i < len(teacher_schedule) - 1:
            if (
                    teacher_schedule[i]["weekday"] == teacher_schedule[i + 1]["weekday"]
                    and teacher_schedule[i]["group"] == teacher_schedule[i + 1]["group"]
                    and teacher_schedule[i]["lesson"]["time_start"]
                    == teacher_schedule[i + 1]["lesson"]["time_start"]



            ):
                teacher_schedule[i]["lesson"]["weeks"] += teacher_schedule[i + 1]["lesson"][
                    "weeks"
                ]
                teacher_schedule[i]["lesson"]["weeks"] = sorted(
                    teacher_schedule[i]["lesson"]["weeks"]
                )
                teacher_schedule.pop(i + 1)
            else:
                i += 1




        for schedule in teacher_schedule:

            if schedule["lesson"]["weeks"] == list(range(1, 18)):
                weeks = "–≤—Å–µ"
            elif schedule["lesson"]["weeks"] == list(range(2, 18, 2)):
                weeks = "–ø–æ —á—ë—Ç–Ω—ã–º"
            elif schedule["lesson"]["weeks"] == list(range(1, 18, 2)):
                weeks = "–ø–æ –Ω–µ—á—ë—Ç–Ω—ã–º"
            else:
                weeks = ", ".join(str(week) for week in schedule["lesson"]["weeks"])

            room = ", ".join(schedule["lesson"]["rooms"])
            teachers = ", ".join(schedule["lesson"]["teachers"])
            weekday = weekdays[schedule["weekday"]]
            text += f'üìù –ü–∞—Ä–∞ ‚Ññ {schedule["lesson_number"] + 1} –≤ ‚è∞ {schedule["lesson"]["time_start"]}‚Äì{schedule["lesson"]["time_end"]}\n'
            text += f'üìù {schedule["lesson"]["name"]}\n'
            text += f'üë• –ì—Ä—É–ø–ø—ã: {schedule["group"]}\n'
            text += f'üìö –¢–∏–ø: {schedule["lesson"]["types"]}\n'
            text += f"üë®üèª‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏: {teachers}\n"
            text += f"üè´ –ê—É–¥–∏—Ç–æ—Ä–∏–∏: {room}\n"
            text += f"üìÖ –ù–µ–¥–µ–ª–∏: {weeks}\n"
            text += f"üìÜ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {weekday}\n\n"


        text_len = len(text)


        for i in range(0, text_len, 4096):
            bot.send_message(message.chat.id, text[i: i + 4096],reply_markup = types.ReplyKeyboardRemove())
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞ –Ω–µ—Ç')


bot.polling()
